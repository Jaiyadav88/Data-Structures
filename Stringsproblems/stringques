oublic static int subseq(String s1)
    {   
        int count[]=new int[256];
        Arrays.fill(count,0);
        int l=s1.length();

        for(int i=0;i<l;i++)
           count[s1.charAt(i)]++;
        for(int i=0;i<l;i++)
        {
            char ch=s1.charAt(i);
            if(count[ch]>1)
            return i;
        }
        return -1;
    }
_______________________________________________________________________________________________________________________

RABIN - KARP ALGORITHM

Problem statement- To find the occurence of a string into another string


Input:
s = GeeksForGeeks, x = For
Output: 5
Explanation: For is present as substring
in GeeksForGeeks from index 5 (0 based
indexing).

Code:public static void RabinKarp(String pat,String txt,int q)
    {
        int n=txt.length();
        int m=pat.length();
        int h=1;
        int p=0;
        int t=0;
        int d=256;
        for(int i=1;i<=m-1;i++)
        {
            h=(h*d)%q;
        }
        for(int i=0;i<m;i++)
        {
            p=(p*d+pat.charAt(i))%q;
            t=(t*d+txt.charAt(i))%q;
        }
        for(int i=0;i<=n-m;i++)
        {
            if(t==p)
            {
                int j;
                for(j=0;j<m;j++)
                    if(txt.charAt(j+i)!=pat.charAt(j))
                        break;
                if(j == m)
                System.err.println(i+" ");
            }
            if(i<n-m)
            {
                t=((d* (t-txt.charAt(i)*h)+txt.charAt(i+m)))%q;
                if(t<0)
                t+=q;
            }
        }
    }
