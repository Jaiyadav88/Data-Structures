Problem Statement-We are given with a string with possible repetetions,we need to find the leftmost character which repeats in the string

Time:O(n)
Aux:O(CHAR)  CHAR=256

Code:
    public static int subseq(String s1)
    {
        int count[]=new int[256];
        Arrays.fill(count,0);
        int l=s1.length();

        for(int i=0;i<l;i++)
           count[s1.charAt(i)]++;
        for(int i=0;i<l;i++)
        {
            char ch=s1.charAt(i);
            if(count[ch]>1)
            return i;
        }
        return -1;
    }

Optimized Approach-
Time:O(n) (One Traversal)
Aux:O(CHAR)  CHAR=256

static final int CHAR=256;
static int leftMost(String str)
{
 boolean[] visited=new boolean[CHAR];
 int res=-1;
 for(int i=str.length()-1;i>=0;i--){
 if(visited[str.charAt(i)])
 res=i;
 else
 visited[str.charAt(i)]=true;
 }

 return res;

}
